---
import MainLayout from '../../layouts/MainLayout.astro';
import pool from '../../lib/db';

const pageTitle = 'Lápices';
const pageDescription = 'Descubre nuestra selección de lápices de alta calidad.';

// Fetch notebooks from the database
let productos = [];

try {
  // Get all products that contain 'lapices' in the name or description
  const [results] = await pool.query(`
    SELECT * 
    FROM productos 
    WHERE LOWER(nombre) LIKE '%lapiz%'   
       OR LOWER(descripcion) LIKE '%lapiz%'
    ORDER BY nombre
  `);
  
  productos = Array.isArray(results) ? results : [];
  
} catch (error) {
  console.error('Error al cargar los lápices:', error);
}
---

<MainLayout title={pageTitle} description={pageDescription}>
  <main class="min-h-screen bg-gray-50">
    <!-- Hero Section -->
    <section class="bg-indigo-700 text-white py-20">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-4xl font-extrabold tracking-tight sm:text-5xl lg:text-6xl">
          {pageTitle}
        </h1>
        <p class="mt-6 max-w-3xl mx-auto text-xl text-indigo-100">
          {pageDescription}
        </p>
      </div>
    </section>



    <!-- Cuadernos Section -->
    <section class="py-12 px-4 sm:px-6 lg:px-8">
      <div class="max-w-7xl mx-auto">
        <h1 class="text-3xl font-bold text-gray-900 mb-8 text-center">Nuestra Colección de Lápices</h1>
        
   
    </section>
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {productos.length > 0 ? (
          <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
            {productos.map((producto) => (
              <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow duration-300 h-full flex flex-col">
                <div class="p-6 flex-grow">
                  <div class="flex items-center justify-center w-full h-48 mx-auto mb-4 overflow-hidden">
                    {producto.imagen_url ? (
                      <img 
                        src={producto.imagen_url} 
                        alt={producto.nombre}
                        class="object-contain w-full h-full"
                        loading="lazy"
                      />
                    ) : (
                      <div class="w-full h-full bg-gray-100 flex items-center justify-center text-gray-400">
                        <span>Sin imagen</span>
                      </div>
                    )}
                  </div>
                  <h3 class="text-xl font-semibold text-gray-900 text-center mb-2">
                    {producto.nombre}
                  </h3>
                  <p class="text-gray-600 text-center mb-4">
                    {producto.descripcion}
                  </p>
                </div>
                <div class="p-6 pt-0 mt-auto">
                  <div class="text-center">
                    <span class="text-2xl font-bold text-gray-900">
                      ${typeof producto.precio === 'number' 
                        ? producto.precio.toFixed(2)
                        : parseFloat(producto.precio || 0).toFixed(2)
                      }
                    </span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div class="text-center py-8">
            <p class="text-gray-500 mb-4">No se encontraron lápices en este momento.</p>
            <p class="text-sm text-gray-400">Por favor, intente más tarde o contacte al administrador.</p>
            <pre class="mt-4 text-left bg-gray-100 p-4 rounded text-xs text-gray-600 overflow-x-auto">
              Debug Info:
              {JSON.stringify({
                hasProducts: productos.length > 0,
                firstProduct: productos[0], 
                allProducts: productos
              }, null, 2)}
            </pre>
          </div>
        )}
      </div>
    </section>
  </main>
</MainLayout>
