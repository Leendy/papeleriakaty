---
import { parse } from 'cookie';
import AuthService from '../lib/auth/auth.service';
import Header from '../components/header.astro';

const { title = 'Papeleria Katy' } = Astro.props;

// Verificar autenticación
let user = null;
const authToken = Astro.cookies.get('auth_token')?.value;

if (authToken) {
  try {
    user = AuthService.verifyToken(authToken);
  } catch (error) {
    console.error('Error verifying token:', error);
    // Limpiar cookie inválida
    Astro.cookies.delete('auth_token');
  }
}

// Verificar si la ruta actual requiere autenticación
const currentPath = Astro.url.pathname;
const protectedRoutes = ['/admin', '/perfil'];
const isProtectedRoute = protectedRoutes.some(route => currentPath.startsWith(route));

// Redirigir a login si no está autenticado y la ruta es protegida
if (isProtectedRoute && !user) {
  return Astro.redirect('/login?redirect=' + encodeURIComponent(currentPath));
}

// Redirigir a admin si es administrador y está en la página de inicio
if (currentPath === '/' && user?.role === 'admin') {
  return Astro.redirect('/admin');
}
---

<!DOCTYPE html>
<html lang="es" class="h-full bg-gray-50">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Papeleria Katy - Tu tienda de artículos de papelería" />
    <title>{title}</title>
    
    <!-- Tailwind CSS -->
    <link rel="stylesheet" href="/styles/global.css" />
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  </head>
  
  <body class="min-h-screen flex flex-col">
    <Header user={user} />
    
    

    
    <main class="flex-grow">
      <slot />
    </main>
    
    <footer class="bg-white mt-12">
      <div class="max-w-7xl mx-auto py-6 px-4 overflow-hidden sm:px-6 lg:px-8">
        <p class="mt-8 text-center text-base text-gray-500">
          &copy; {new Date().getFullYear()} Papeleria Katy. Todos los derechos reservados.
        </p>
      </div>
    </footer>
    
    <script>
      // Cerrar menús al hacer clic fuera de ellos
      document.addEventListener('click', (e) => {
        const userMenu = document.getElementById('user-menu-dropdown');
        const userMenuButton = document.getElementById('user-menu');
        
        if (userMenu && userMenuButton && !userMenu.contains(e.target) && !userMenuButton.contains(e.target)) {
          userMenu.classList.add('hidden');
          userMenuButton.setAttribute('aria-expanded', 'false');
        }
      });
    </script>
  </body>
</html>
