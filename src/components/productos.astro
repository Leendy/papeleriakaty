---

// Datos de los productos
const products = [
  {
    id: 1,
    name: '√ötiles Escolares',
    description: 'L√°pices, bol√≠grafos, marcadores, crayones, sacapuntas, borradores y todo lo necesario para el regreso a clases.',
    icon: '‚úèÔ∏è',
    category: 'escolar'
  },
  {
    id: 2,
    name: 'Cuadernos y Libretas',
    description: 'Cuadernos de diferentes tama√±os, libretas profesionales, agendas y blocks de notas para todas tus necesidades.',
    icon: 'üìö',
    category: 'oficina'
  },
  {
    id: 3,
    name: 'Papel y Cartulinas',
    description: 'Papel bond, cartulinas de colores, papel crepe, manila y materiales especiales para manualidades.',
    icon: 'üìÑ',
    category: 'manualidades'
  },
  {
    id: 4,
    name: 'Material de Oficina',
    description: 'Carpetas, organizadores, grapadoras, clips y todo lo necesario para mantener tu oficina organizada.',
    icon: 'üìé',
    category: 'oficina'
  },
  {
    id: 5,
    name: 'Arte y Manualidades',
    description: 'Pinturas, pinceles, acuarelas, plastilina y m√°s para tus proyectos creativos.',
    icon: 'üé®',
    category: 'manualidades'
  },
];
---

<section id="productos" class="py-16 bg-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-extrabold text-gray-900 sm:text-4xl">
        Nuestros Productos
      </h2>
      <p class="mt-3 max-w-2xl mx-auto text-xl text-gray-500 sm:mt-4">
        Descubre nuestra amplia variedad de productos de papeler√≠a
      </p>
    </div>

  

    <!-- Grid de productos -->
    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {products.map((product) => (
        <button 
          class="w-full bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-lg transition-all duration-300 product-card border border-gray-100 text-left focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
          data-category={product.category}
          onclick={
            product.id === 1 ? "window.location.href='/utiles/utiles'" : 
            product.id === 2 ? "window.location.href='/cuadernos'" :
            product.id === 3 ? "window.location.href='/papel'" :
            product.id === 4 ? "window.location.href='/oficina'" :
            product.id === 5 ? "window.location.href='/arte'" :
            `window.location.href='#${product.category}'`
          }
        >
          <div class="p-6">
            <div class="flex items-center justify-center w-16 h-16 mx-auto mb-4 rounded-full bg-indigo-100 text-3xl">
              {product.icon}
            </div>
            <h3 class="text-xl font-semibold text-gray-900 text-center mb-2">
              {product.name}
            </h3>
            <p class="text-gray-600 text-sm text-center">
              {product.description}
            </p>
          </div>
        </button>
      ))}
    </div>
  </div>
  
</section>

<!-- Script para el filtrado de productos -->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Usar type assertion para los elementos del DOM
    const filterButtons = Array.from(document.querySelectorAll('[data-category]')) as HTMLButtonElement[];
    const productCards = Array.from(document.querySelectorAll('.product-card')) as HTMLElement[];

    filterButtons.forEach((button: HTMLButtonElement) => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-category') || '';
        
        // Actualizar estilos de los botones
        filterButtons.forEach((btn: HTMLButtonElement) => {
          if (btn === button) {
            btn.classList.remove('bg-white', 'border-gray-300', 'text-gray-700');
            btn.classList.add('bg-indigo-600', 'text-white');
          } else {
            btn.classList.remove('bg-indigo-600', 'text-white');
            btn.classList.add('bg-white', 'border', 'border-gray-300', 'text-gray-700');
          }
        });

        // Filtrar productos
        productCards.forEach((card: HTMLElement) => {
          const cardCategory = card.getAttribute('data-category') || '';
          if (category === 'all' || cardCategory === category) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });
      });
    });
  });
</script>